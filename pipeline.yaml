AWSTemplateFormatVersion: 2010-09-09
Parameters:
  Environment:
    Description: Environment
    Type: String
    Default: dev
  GithubUser:
    Type: String
    Default: "eduardosada"
  GithubToken:
    Type: String
    Default: "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"
  GithubBranch:
    Type: String
    Default: "develop"
  GithubRepo:
    Type: "String"
    Default: "vite-app"

Resources:
  CodeBuildSourceCredential:
    Type: AWS::CodeBuild::SourceCredential
    Properties:
      AuthType: PERSONAL_ACCESS_TOKEN
      ServerType: GITHUB
      Token: !Ref GithubToken

  CodeBuildProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: !Ref AWS::StackName
      ServiceRole: !Ref CodeBuildServiceRole
      Description: !Sub "Build project for ${GithubRepo}"
      Source:
        Type: GITHUB
        Location: !Sub "https://github.com/${GithubUser}/${GithubRepo}.git"
        BuildSpec: buildspec.yml
        Auth:
          Type: OAUTH
          Resource: !Ref CodeBuildSourceCredential
      Artifacts:
        Type: NO_ARTIFACTS
      Triggers:
        Webhook: true
        FilterGroups:
          - - Type: EVENT
              Pattern: PULL_REQUEST_CREATED, PULL_REQUEST_UPDATED
            - Type: BASE_REF
              Pattern: !Sub ^refs/heads/${GithubBranch}$
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/amazonlinux2-x86_64-standard:3.0

  #   CodePipelineWebhook:
  #     Type: AWS::CodePipeline::Webhook
  #     Properties:
  #       Authentication: GITHUB_HMAC
  #       AuthenticationConfiguration:
  #         SecretToken: !Ref GithubToken
  #       Filters:
  #         - JsonPath: "$.ref"
  #           MatchEquals: !Sub "refs/heads/${GithubBranch}"
  #       TargetPipeline: !Ref CodePipeline
  #       TargetAction: GitHub
  #       Name: !Sub "${Environment}-webhook"
  #       TargetPipelineVersion: !GetAtt CodePipeline.Version
  #       RegisterWithThirdParty: true

  #   CodePipeline:
  #     Type: AWS::CodePipeline::Pipeline
  #     Properties:
  #       ArtifactStore:
  #         Location: !Ref ArtifactBucket
  #         Type: S3
  #       Name: VueProject
  #       RoleArn: !GetAtt CodePipelineServiceRole.Arn
  #       Stages:
  #         - Name: Source
  #           Actions:
  #             - Name: GitHub
  #               RunOrder: 1
  #               ActionTypeId:
  #                 Category: Source
  #                 Owner: ThirdParty
  #                 Provider: GitHub
  #                 Version: 1
  #               Configuration:
  #                 Owner: !Ref GithubUser
  #                 Repo: !Ref GithubRepo
  #                 Branch: !Ref GithubBranch
  #                 OAuthToken: !Ref GithubToken
  #                 PollForSourceChanges: false
  #               OutputArtifacts:
  #                 - Name: SourceCodeAsZip

  #         - Name: Build
  #           Actions:
  #             - Name: Build
  #               ActionTypeId:
  #                 Category: Build
  #                 Owner: AWS
  #                 Version: "1"
  #                 Provider: CodeBuild
  #               Configuration:
  #                 ProjectName: !Ref CodeBuild
  #                 EnvironmentVariables: !Sub '
  #                   [
  #                       {
  #                           "name":"EXECUTION_ID",
  #                           "value":"#{codepipeline.PipelineExecutionId}"
  #                       },
  #                       {
  #                           "name":"ASSET_NAME",
  #                           "value":"${GithubRepo}"
  #                       },
  #                       {
  #                           "name":"ASSETS_BUCKET",
  #                           "value":"${ArtifactBucket}"
  #                       }
  #                   ]
  #                 '
  #               InputArtifacts:
  #                 - Name: SourceCodeAsZip
  #               OutputArtifacts:
  #                 - Name: BuildOutput
  #               RunOrder: 2

  #   ###########################################
  #   # S3 ARTIFACTS :: CODEPIPELINE
  #   ###########################################
  #   ArtifactBucket:
  #     Type: AWS::S3::Bucket
  #     DeletionPolicy: Delete
  #     UpdateReplacePolicy: Delete
  #     Properties:
  #       PublicAccessBlockConfiguration:
  #         BlockPublicAcls: true
  #         BlockPublicPolicy: true
  #         IgnorePublicAcls: true
  #         RestrictPublicBuckets: true
  #       Tags:
  #         - Key: Environment
  #           Value: !Ref Environment

  #   ###########################################
  #   # S3 ARTIFACTS :: CODEBUILD
  #   ###########################################
  #   CodeBuildArtifactsBucket:
  #     Type: AWS::S3::Bucket
  #     DeletionPolicy: Delete
  #     UpdateReplacePolicy: Delete
  #     Properties:
  #       BucketName: !Sub "eduardito-aws-pruebita-${Environment}-codebuild-artifacts"
  #       PublicAccessBlockConfiguration:
  #         BlockPublicAcls: true
  #         BlockPublicPolicy: true
  #         IgnorePublicAcls: true
  #         RestrictPublicBuckets: true
  #       Tags:
  #         - Key: Environment
  #           Value: !Ref Environment

  CodeBuildServiceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: codebuild.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: root
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Sid: CloudWatchLogsPolicy
                Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource: "*"

              - Sid: S3Policy
                Effect: Allow
                Action:
                  - s3:GetObject
                  - s3:GetObjectVersion
                  - s3:PutObject
                Resource:
                  "*"
                  # - !Sub arn:aws:s3:::${ArtifactBucket}/*
                  # - arn:aws:s3:::codebuildspec/*

              - Sid: S3BucketIdentity
                Effect: Allow
                Action:
                  - s3:GetBucketAcl
                  - s3:GetBucketLocation
                Resource: "*"
#   CodePipelineServiceRole:
#     Type: AWS::IAM::Role
#     Properties:
#       Path: /
#       AssumeRolePolicyDocument:
#         Version: 2012-10-17
#         Statement:
#           - Effect: Allow
#             Principal:
#               Service: codepipeline.amazonaws.com
#             Action: sts:AssumeRole
#       Policies:
#         - PolicyName: root
#           PolicyDocument:
#             Version: 2012-10-17
#             Statement:
#               - Resource:
#                   - !Sub arn:aws:s3:::${ArtifactBucket}/*
#                   - !Sub arn:aws:s3:::${ArtifactBucket}
#                 Effect: Allow
#                 Action:
#                   - s3:*
#               - Resource: "*"
#                 Effect: Allow
#                 Action:
#                   - codebuild:StartBuild
#                   - codebuild:BatchGetBuilds
#                   - iam:PassRole
#               - Resource: "*"
#                 Effect: Allow
#                 Action:
#                   - codedeploy:CreateDeployment
#                   - codedeploy:CreateDeploymentGroup
#                   - codedeploy:GetApplication
#                   - codedeploy:GetApplicationRevision
#                   - codedeploy:GetDeployment
#                   - codedeploy:GetDeploymentConfig
#                   - codedeploy:RegisterApplicationRevision
